# -*- mode: conf -*-
# gitconfig

[core]
    excludesfile = ~/.gitignore
    pager = less -RSX

[diff]
    renames = copies

[log]
    decorate = short

#[help]
#    # correction stile zsh :P dopo 3 secondi esegue il comando
#    autocorrect = 30

[color]
    ui = auto
[color "branch"]
    current = magenta reverse
    local = yellow
    remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red
  new = green
  whitespace = red reverse

# Per mostrare in 'git status' anche i file nelle directory 'untracked'
# NOTA: determina la visibilita' anche in magit-status
# [status]
#       showUntrackedFiles = all

[pager]
    log = /usr/local/opt/git/share/git-core/contrib/diff-highlight/diff-highlight | less
    show = /usr/local/opt/git/share/git-core/contrib/diff-highlight/diff-highlight | less
    diff = /usr/local/opt/git/share/git-core/contrib/diff-highlight/diff-highlight | less

[alias]
    br = branch
    changes = log --oneline --reverse
    ci = commit
    co = checkout
    commit = commit -v
    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
    istoria = log --pretty=medium --reverse --abbrev-commit --date=relative --decorate
    last = log -1 HEAD
    latest = for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short) [%(committername)]'
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    ll = log --pretty=oneline --abbrev-commit --pretty=format:'%C(yellow)%h%Creset %s %Cgreen(%cr)%Creset'
    lost = !"git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Creset %f' --stdin | awk '/SHA1/ {sub(\"SHA1: \", \"\"); print}'"
    ls = ls-files
    ly = log --pretty='tformat:%h %an (%ar): %s' --since=yesterday
    pullone = pull origin master:refs/heads/master
    pushone = push origin master:refs/heads/master
    #via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
    recent-branches = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)'
    st = status -sb
    storia = log --pretty=medium --graph --abbrev-commit --date=relative --decorate
    storiona = log --pretty=medium --graph --abbrev-commit --date=relative --stat --summary --decorate
    undo = reset --hard HEAD~1
    unpushed = log --branches --not --remotes --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    unstage = reset HEAD --
    w = whatchanged


# Questo e' per OSX ma su Linux non crea conflitti.
[credential]
    helper = osxkeychain

# NOTE: default from git 2.0
[push]
    default = simple

# tig configuration (here instead of ~/.tigrc)
# See also: https://github.com/dolinsky/dotfiles/blob/e1df41bb6d457669bbce7d2b4998b688357cec11/.tigrc
[tig]
line-graphics = utf-8
main-view = line-number:no,interval:5 id:true date:relative author:abbreviated commit-title:yes,graph,refs,overflow=no
[tig "color"] cursor = white black
[tig "color"] status = white default
[tig "color"] title-focus = white black
[tig "color"] date = yellow default
[tig "color"] author = green default
[tig "color"] main-head = magenta default
[tig "color"] main-tag = magenta default
[tig "color"] stat-staged = green default
[tig "color"] stat-unstaged = red default
[tig "color"] stat-untracked = yellow default
# [tig "color"] tree.header = white default
# [tig "color"] tree.directory = cyan default

[include]
path = ~/.gitconfig.local
