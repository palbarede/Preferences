# ~/.screenrc
# Last update: 24 gennaio 2008 y0

# Bindings

# F8 = next window
bindkey -k k9 next
# F9 = prev window
bindkey -k k8 prev

# alt-left alt-right, MOLTO MEGLIO!
bindkey "^[[1;3D" prev
bindkey "^[[1;3C" next

# bindo il kill su 'K' al posto di 'k'
bind ^k
bind k
bind K kill
bind ^\
bind \\ quit

# window resize with = + -
bind = resize =
bind + resize +3
bind - resize -3

# muoversi tra aree della stessa finestra
bind ^j focus down
bind ^k focus up
bind ^t focus top
bind ^b focus bottom

# da debian -->
# The vt100 description does not mention "dl". *sigh*
termcapinfo vt100 dl=5\E[M

# - Il titolo della finestra xterm/urxvt/etc...

# uso la hardstatus per il titolo dell'xterm, quindi non voglio messaggi
# (leggi la man per capire questo oscuro messaggio).
hardstatus off

# Set the hardstatus prop on gui terms to set the titlebar/icon title
termcapinfo xterm*|rxvt*|kterm*|Eterm* hs:ts=\E]0;:fs=\007:ds=\E]0;\007

# screen NUMERO (TITOLO) | user@host
defhstatus "screen ^E (^Et) | $USER@^EH"

# set these terminals up to be 'optimal' instead of vt100
termcapinfo xterm*|linux*|rxvt*|Eterm* OP

# To get screen to add lines to xterm's scrollback buffer, uncomment the
# following termcapinfo line which tells xterm to use the normal screen buffer
# (which has scrollback), not the alternate screen buffer.
#
# P.S. su debian c'era scritto 'xterm' e infatti su osx non fungeva (su debian non saprei)
# quindi aggiungo l'asterisco.
termcapinfo xterm*|xterms|xs|rxvt ti@:te@

# http://aperiodic.net/screen/faq
#
# First off, it's recommended that you use screen's scrollback buffer instead.
# Since you can have multiple windows in a screen session, if you switch
# between those windows, your terminal scrollback will mix lines from all of
# those windows, but screen keeps separate scrollback buffers for each one.
# Just use C-a ESC or C-a [ to enter copy mode. But if you do want scrollback
# in your terminal window (usually xterm), read on.
# 
# Some background: One capability that a terminal may have is an “alternate
# screen”. xterm has it, and you may have seen its effects–a program will
# request the alternate screen, the terminal switches there, and when the
# program exits the terminal goes back to the normal screen, leaving all the
# text there intact.  It is recommended that all full-screen apps use this, so
# as to minimize their impact on any purely command-line stuff. It makes sense,
# for instance, for vi to use the alternate screen. The drawback to the
# alternate screen is that only the main screen accumulates scrollback.
#
# As you might have guessed, screen uses the alternate screen, if it’s
# available. There’s no real way to turn off use of the alternate screen, but
# you can make screen think that the terminal doesn’t have an alternate screen
# with the termcapinfo command:
# termcapinfo xterm* ti@:te@

# Options

# Setta un escape alternativo: ^f
# escape ^ff
# esigo UTF-8
#defutf8 on
# activity on window X
activity "C'e' uno che te vole sulla %n"
# autodetach on HUP (when shell exit)
autodetach on
# bell msg
bell_msg '*knock* *knock* Follow the white rabbit in window %n'

# l'underline diventa cyan
attrcolor u "-u c"

# comprime le righe vuote nel backlog
compacthist on

# quando incolla usa \n\r invece del solo \n
#crlf on

# ignore il case nelle ricerche di testo
ignorecase on

# mmmh...
# obuflimit [limit]
#
# If the output buffer contains more bytes than the specified  limit,  no
# more  data  will be read from the windows. The default value is 256. If
# you have a fast display (like xterm), you can set  it  to  some  higher
# value. If no argument is specified, the current setting is displayed.

# cose interessanti
#
#	!:sed -n s/.*Error.*/\007/p
# Sends  window  output  to  both,  the user and the sed command. The sed
# inserts an additional bell character (oct. 007) to  the  window  output
# seen  by screen.  This will cause "Bell in window x" messages, whenever
# the string "Error" appears in the window.
# (e' un comando, si da con ^A: !:sed...)

# Una "status bar" con l'elenco delle window e il loro nome, hostname e colori
# caption always "%{Yk}%H%{G}|%{C} %-Lw( %{W}%n%f %t%{-} )%+Lw %=%{G}|%{W}%d/%m/%y %D %c"
# Una "status bar" con l'elenco delle window e il loro nome, nero su bianco
#caption always "%{= wk} %?%-Lw%?%{= kd} %n*%f %t %{= wk}%?%+Lw%? %{= wk}%=%{= Wk} %C%a %d-%m-%Y %{= wk}"
caption always "%{= kR} %?%-Lw%?%{= rw} %n*%f %t %{= kR}%?%+Lw%? %{= kR}%=%{= kw} %C%a %d-%m-%Y %{= kd}"

# scrollback per window (5000 lines)
defscrollback 5000
# invoked shell
#shell /bin/zsh
# silence wait time (^C+A + _)
silencewait 20
# Il colore testo/colore sfondo dei messaggi di screen
sorendition wR
# initial banner
startup_message off
# visual bell on
vbell on
# visual bell msg
vbell_msg " -- SANTA POLENTA! -- "
# Messaggi stile nethack
nethack on

# example for .screenrc:
#screen -t IRC 0
#screen 2
#select 0
