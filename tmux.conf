# ==================
# tmux configuration
# ==================
#
# <<Perche' screen e' anni '90.>>
#	-- Anonimo
#
# Key bindings:
# s => choose-tree => Permette di scegliere una window/pane di una sessione
# w => choose-window => Permette di scegliere una window di questa sessione

################
# MISC OPTIONS #
################

# set TERM for 256 colors
set -g default-terminal "screen-256color"

# enable utf8 globally (removed with tmux 2.2)
# set-window-option -g utf8 on
# set -g status-utf8 on

# turn off automatic renaming
# 18/09/2012 - osx ML fa conflitto con | less, lo disattivo.
set-window-option -g automatic-rename on

# quando si chiude l'ultima finestra e ci sono ancora sessioni aperte, passa alla prima di esse.
set -g detach-on-destroy off

# don't like the bell (?)
set -g bell-action current
# show tmux messages for 3000 ms
set -g display-time 1000
# set a shorter timeout on the "repeat" feature (era 250)
set -g repeat-time 125

# display-panes colors
set -g display-panes-active-colour colour214
set -g display-panes-colour colour112

# numero di righe nella history di una window
set -g history-limit 5120

# index windows and panes from 1 which key is more friendly than 0 on a keyboard
set -g base-index 1
set -g pane-base-index 1

# emacs keys, che e' meglio.
set-window-option -g mode-keys vi
set -g status-keys emacs

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux: #{session_name}:#{window_index}.#{pane_index}"

# Riassegna gli ID delle window quando ne chiudi una (tmux 1.7)
set -g renumber-windows on

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

set-option -g message-bg default
set-option -g message-fg colour166 #orange

# RGB 24bit color support ?
set-option -ga terminal-overrides ",xterm-256color:Tc"

##############
# STATUS BAR #
##############

# left status bar
set -g status-left '#[fg=blue,bold] #{session_name}#[default,fg=white]:#[fg=yellow]#{window_index}.#{pane_index}#[default]'
set -g status-left-length 80

# right status bar
set -g status-right "#[fg=colour208]%H:%M %Z #[fg=colour140](#(utc_date) UTC) #[fg=colour208]%d-%h-%Y#[default]"
set -g status-right-length 80

# center align the window list
set -g status-justify centre

set-option -g status-attr default

# default window title colors
setw -g window-status-bg default
setw -g window-status-fg colour245

# active window title colors
setw -g window-status-current-bg colour23
setw -g window-status-current-fg colour214

# uso lo stesso colore dello sfondo del term per lo sfondo della status bar
set -g status-bg default
set -g status-fg colour236

setw -g window-status-format '#[fg=colour88,bg=colour238] #{window_index} #[fg=colour233,bg=colour23] #{window_name}#{window_flags} #{?pane_synchronized, ,}'
setw -g window-status-current-format '#[fg=colour231,bg=colour32,bold] #{window_index} #[fg=colour233,bg=colour76] #{window_name}#{window_flags} #{?pane_synchronized, ,}'

################
# KEY BINDINGS #
################

# split current window
# bind S split-window -c "#{pane_current_path}"

# Vertical and horizontal window splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# preserve current path for new windows
bind c new-window -c "#{pane_current_path}"

# alt+left: previous window
# alt+right: next window
# (Su OS X è Ctrl-Shift-<left|right>, se hai attivato ALT=META nelle opzioni di Terminal.app)
bind -n M-left previous-window
bind -n M-right next-window

# shift+left: swap with the previous window
# shift+right: swap with the next window
bind -n S-left swap-window -t:-1
bind -n S-right swap-window -t:+1

# F8: previous window
# F9: next window
# bind -n F8 previous-window
# bind -n F9 next-window

# set command prefix from C-b to C-a
# NOTE: there was a problem with tmux (maybe it's by design) for which you
# can't use a command prefix like "`" because it could get triggered by pasted
# text. :(
unbind C-b
set -g prefix C-a
# allow sending of "real" C-a for readline and nested tmux sessions (i.e. you can
# press C-a C-a to send a real C-a)
bind a send-prefix

# set window title
unbind A
bind A command-prompt "rename-window %%"

# pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# reload config
bind r source-file ~/.tmux.conf \; display "tmux configuration reloaded"

# monitor activity
# bind m setw monitor-activity

# man
bind m command-prompt -p "man page:" "split-window -h 'exec man %%'"
bind M command-prompt -p "Man page:" "new-window -n 'man %1' 'exec man %1'"

# duplicate input to all panes in the same window
# bind S set-window-option synchronize-panes on
# bind s set-window-option synchronize-panes off

###########################
# OS BASED CUSTOMIZATIONS #
###########################

# If tmux is started from an ssh connection rebind the command key from C-a to C-f
if '[ ! -z "$SSH_CONNECTION" ]' 'unbind C-a ; set -g prefix C-f ; bind C-f send-prefix'

# Pass the "copy buffer" from copy mode to the "graphical" clipboard buffer (X11 or Darwin)
# HINT: on OS X (pre Yosemite) you can try prefixing 'pbcopy' with 'reattach-to-user-namespace'
if '[[ $OSTYPE == linux* ]]' 'bind y run-shell "tmux save-buffer - | xclip -in -selection clipboard -d :0" \; display-message "tmux bufffer copied into clipboard!"'
if '[[ $OSTYPE == darwin* ]]' 'bind y run-shell "tmux save-buffer - | pbcopy" \; display-message "tmux buffer copied into clipboard!"'

# sane scrolling (TO BE TESTED)
if '[[ $OSTYPE == linux* ]]' 'set -g terminal-overrides "xterm*:smcup@:rmcup@"'

if '[ -e ~/.tmux.local ]' 'source ~/.tmux.local'

if '[ -e ~/dev/others/tmux-copycat ]' 'run-shell ~/dev/others/tmux-copycat/copycat.tmux'

# vim: ft=tmux
