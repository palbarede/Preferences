# ssh wrapper function to set tmux window (pane?) title

# bypass this function if stdout is not a terminal, to avoid messing up
# the output with our printf() calls.
[[ -t 1 ]] || exec command ssh $@

local prev_window_name=$(tmux display-message -p "#{window_name}")
local prev_pane_title=$(tmux display-message -p "#{pane_title}")

# for each command line argument passed to ssh, check if it's a hostname
local hostname=$(perl -e 'foreach $h (@ARGV) { if ($h =~ /^(?<!-)(?:\w+@)?([^.]+\.[^.]+\..*)/) { print $+; exit; } }' -- $@)

if [[ -z $hostname ]]; then
    command ssh $@
else
    # Set window name and pane title when there's only 1 pane (i.e. the whole window),
    # otherwise set just the pane title.
    if [[ $(tmux display-message -p "#{window_panes}") == 1 ]]; then
        # Use a shortened version of the hostname for the window title
        printf "\033k${hostname%.*.*.*}\033\\"
        printf "\033]2;${hostname}\033\\"
    else
        printf "\033]2;${hostname}\033\\"
    fi
    command ssh $@
    if [[ $(tmux display-message -p "#{window_panes}") == 1 ]]; then
        printf "\033k${prev_window_name}\033\\"
    fi
    printf "\033]2;${prev_pane_title}\033\\"
fi
