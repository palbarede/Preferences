# =====================================================================
# ~/.zsh/zfunc
# Funzioni per varie funzioni; essendo brevi non uso il metodo autoload
# ---------------------------------------------------------------------

# zsh profiling
# just execute 'ZSH_PROFILE_RC=1 zsh' and run 'zprof' to get the details
if [[ $ZSH_PROFILE_RC -gt 0 ]] ; then
    zmodload zsh/zprof
fi

# Utile per i dotfiles
# zmv $HOME'/dotfiles/dot_(*)' '$HOME/$1'

# tree amanuense se non c'e' il pacchetto installato {{{
# from strcat.de
if (( ! $+commands[tree] )); then
	tree() { find . | sed -e 's/[^\/]*\//|----/g' -e 's/---- |/    |/g' | $PAGER }
fi
# }}}


# copia pv
# % (tar cf - files.* | pv -n -s $(gdu -csb files.* | tail -1 | awk '{print $1}') | (cd /Volumes/Expansion\ Drive; tar xf - )) 2>&1 | dialog --gauge 'Progress' 7 70

rscreen () {
    autossh -t $1 "screen -e^Ff -daAR"
}

# IDEE
#
# Questo setta uno style
zstyle ":chpwd:profiles:${HOME}/Work(|/|/*)" profile work

# Questo controlla se esiste uno style corrispondente
function controlla() {
	local -x profile

	zstyle -s ":chpwd:profiles:${PWD}" profile profile || profile='default'
	print $profile
}
# controlla

# https://github.com/myfreeweb/zshuery/blob/master/zshuery.sh
rot13() {
	echo $1 | tr "A-Za-z" "N-ZA-Mn-za-m"
}

latrus() {
	echo $1 | tr "qwertyuiop[]asdfghjkl;'zxcvbnm,.QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM" "йцукенгшщзхъфывапролджэячсмитьбюЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ"
}

ruslat() {
	echo $1 | tr "йцукенгшщзхъфывапролджэячсмитьбюЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ" "qwertyuiop[]asdfghjkl;'zxcvbnm,.QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM"
}

urlencode() { python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1])" $1 }
urldecode() { python -c "import sys, urllib as ul; print ul.unquote_plus(sys.argv[1])" $1 }

# vim: ft=zsh
